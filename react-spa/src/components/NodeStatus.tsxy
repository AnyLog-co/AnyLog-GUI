import React, { FC } from 'react';
import { useQuery } from 'react-query';
import { useRecoilState } from 'recoil';
import { useTable } from 'react-table';
import CssBaseline from '@material-ui/core/CssBaseline';
import MaUTable from '@material-ui/core/Table';
import TableBody from '@material-ui/core/TableBody';
import TableCell from '@material-ui/core/TableCell';
import TableHead from '@material-ui/core/TableHead';
import TableRow from '@material-ui/core/TableRow';

import communicatorState, { OptionalCommunicator } from '../lib/communicatorState';

const data = React.useMemo(
  () => [
    {
      col1: 'Hello',
      col2: 'World',
    },
    {
      col1: 'react-table',
      col2: 'rocks',
    },
    {
      col1: 'whatever',
      col2: 'you want',
    },
  ],
  []
);

const columns = React.useMemo(
  () => [
    {
      Header: 'Column 1',
      accessor: 'col1', // accessor is the "key" in the data
    },
    {
      Header: 'Column 2',
      accessor: 'col2',
    },
  ],
  []
)j

const Example: FC = () => {
  const [communicator] = useRecoilState<OptionalCommunicator>(communicatorState);

  const tableInstance = useTable({ columns, data });

  const { isLoading, error, data } = useQuery('nodeStatus', () =>
    communicator ? communicator.nodeStatus().then((res) => res) : {},
  );

  if (isLoading) return <>Loading...</>;

  if (error) throw error;

  console.log(data);
  return <div />;
};

export default Example;
